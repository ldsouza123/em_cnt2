openapi: '3.0.1'
info:
  description: Create, View, Update and delete a emergency contact phone. 
  version: '1.0'
  title: Emergency Contact Service
  contact:
    name: Integration Services
    email: hiq@qut.edu.au
  license:
    name: QUT
    url: 'https://www.qut.edu.au/additional/copyright'
servers: 
  - url: http://qut/identity/emergency-contact/v1
    description: IDS endpoint for emergency contact details management

paths:
  /emergency-contacts/username/{username}:
    get:
      tags:
        - Emergency Contact (CRUD)
      summary: Retrieve all Emergency Contacts belonging to {username}
      description: Retrieve all emergency contacts for the user associated {username}
      operationId: getAllEmergencyContacts
      parameters:
        - name: username
          in: path
          description: A valid QUT username.
          required: true
          schema:
            type : string
      responses:
        '200':
          $ref: '#/components/schemas/EmergencyContacts'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      tags:
        - Emergency Contact (CRUD)
      summary: Create one to two new Emergency Contact.
      description: Create one or two new Emergency Contact for the user associated with the submitted access token.
      operationId: createEmergencyContact
      parameters:
        - name: username
          in: path
          description: A valid QUT username.
          required: true
          schema:
            type : string
      responses:
        '200':
          $ref: '#/components/schemas/EmergencyContacts'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - Emergency Contact (CRUD)
      summary: update all emergency contacts
      description: Update emergency contacts of the user
      operationId: updateEmergencyContact
      parameters:
        - name: username
          in: path
          description: A valid QUT username.
          required: true
          schema:
            type : string
      responses:
        '200':
          $ref: '#/components/schemas/EmergencyContacts'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /emergency-contacts/username/{username}/type/{type}:
    delete:
      tags:
        - EmergencyContact (CRUD)
      summary: delete a emergency contact
      description: delete a single emergency contact with given {type}
      operationId: deleteEmergencyContact
      parameters:
        - name: username
          in: path
          required: true
          description: A valid QUT username.
          schema:
            type : string
        - name: type
          in: path
          required: true
          description: A valid type 
          schema:
            type : string
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    get:
      tags:
        - Emergency Contact (Read Only)
      summary: Retrieve a single emergency contact with given type
      operationId: getEmergencyContact
      parameters:
        - name: username
          description: A valid QUT username.
          in: path
          required: true
          schema:
            type : string
        - name: type
          in: path
          required: true
          description: A valid type 
          schema:
            type : string
      responses:
        '200':
          $ref: '#/components/schemas/EmergencyContact'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
#------------------------- Models -------------------------#

components:
  schemas:
    EmergencyContact:
      type: object
      properties:
        type:
          type: string
          enum:
           - EMERGENCY1 
           - EMERGENCY2
        name:
          type: string
          example: 'John Smith'
        homePhone:
          type: string
          example: '(07)32107654'
        workPhone:
          type: string
          example: '(07)32104567'
        mobile:
          type: string
          example: '(04)32109876'
        lastUpdated:
          type: string
          example: "2015-08-10T10:40:52Z"
        dateCreated:
          type: string
          example: "2015-08-20T10:40:52Z"

    EmergencyContacts:
      type: array
      items:
        $ref: '#/components/schemas/EmergencyContact'

#------------------------- Responses -------------------------#
    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: number
        status:
          type: string
        error:
          type: string
        message:
          type: string
        exception:
          type: string
        path:
          type: string
      required:
        - error
        - message
    SuccessResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
      required:
        - status
        - message

  responses:
    Success:
      description: requested operation was successful
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuccessResponse'
    Forbidden:
      description:
        Returned if an invalid client submits a token on behalf of a user.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Unauthorized:
      description:
        invalid authentication token.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    BadRequest:
      description:
        Returned if submitted data/params are incorrect
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description:
        could not find a resource for this url
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
